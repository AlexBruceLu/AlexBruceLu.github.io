<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>AlexBruce</title>
  
  <subtitle>消遣阁</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://alexbrucelu.github.io/"/>
  <updated>2019-12-09T10:28:16.706Z</updated>
  <id>https://alexbrucelu.github.io/</id>
  
  <author>
    <name>AlexBruce Lu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Ubuntu 16.04 升级最新版本 nvidia-docker</title>
    <link href="https://alexbrucelu.github.io/2019/12/09/01/"/>
    <id>https://alexbrucelu.github.io/2019/12/09/01/</id>
    <published>2019-12-09T09:18:48.000Z</published>
    <updated>2019-12-09T10:28:16.706Z</updated>
    
    <content type="html"><![CDATA[<p>@[TOC]</p><h3 id="Uninstall-old-versions"><a href="#Uninstall-old-versions" class="headerlink" title="Uninstall old versions"></a>Uninstall old versions</h3><p>Older versions of Docker were called <code>docker</code>, <code>docker.io</code>, or <code>docker-engine</code>. If these are installed, uninstall them:</p><pre><code>$ sudo apt-get remove docker docker-engine docker.io containerd runc</code></pre><p>It’s OK if <code>apt-get</code> reports that none of these packages are installed.</p><p>The contents of <code>/var/lib/docker/</code>, including images, containers, volumes, and networks, are preserved. The Docker Engine - Community package is now called <code>docker-ce</code>.</p><h3 id="Supported-storage-drivers"><a href="#Supported-storage-drivers" class="headerlink" title="Supported storage drivers"></a>Supported storage drivers</h3><p>Docker Engine - Community on Ubuntu supports <code>overlay2</code>, <code>aufs</code> and <code>btrfs</code> storage drivers.</p><blockquote><p><strong>Note</strong>: In Docker Engine - Enterprise, <code>btrfs</code> is only supported on SLES. See the documentation on <a href="https://docs.docker.com/engine/userguide/storagedriver/btrfs-driver/" target="_blank" rel="noopener">btrfs</a> for more details.</p></blockquote><p>For new installations on version 4 and higher of the Linux kernel, <code>overlay2</code> is supported and preferred over <code>aufs</code>. Docker Engine - Community uses the <code>overlay2</code> storage driver by default. If you need to use <code>aufs</code> instead, you need to configure it manually. See <a href="https://docs.docker.com/engine/userguide/storagedriver/aufs-driver/" target="_blank" rel="noopener">aufs</a></p><h3 id="Install-Docker-Engine-Community"><a href="#Install-Docker-Engine-Community" class="headerlink" title="Install Docker Engine - Community"></a>Install Docker Engine - Community</h3><p>You can install Docker Engine - Community in different ways, depending on your needs:</p><ul><li>Most users <a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-using-the-repository" target="_blank" rel="noopener">set up Docker’s repositories</a> and install from them, for ease of installation and upgrade tasks. This is the recommended approach.</li><li>Some users download the DEB package and <a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-from-a-package" target="_blank" rel="noopener">install it manually</a> and manage upgrades completely manually. This is useful in situations such as installing Docker on air-gapped systems with no access to the internet.</li><li>In testing and development environments, some users choose to use automated <a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-using-the-convenience-script" target="_blank" rel="noopener">convenience scripts</a> to install Docker.</li></ul><h3 id="Install-using-the-repository"><a href="#Install-using-the-repository" class="headerlink" title="Install using the repository"></a>Install using the repository</h3><p>Before you install Docker Engine - Community for the first time on a new host machine, you need to set up the Docker repository. Afterward, you can install and update Docker from the repository.</p><h4 id="SET-UP-THE-REPOSITORY"><a href="#SET-UP-THE-REPOSITORY" class="headerlink" title="SET UP THE REPOSITORY"></a>SET UP THE REPOSITORY</h4><ol><li><p>Update the <code>apt</code> package index:</p><pre><code>$ sudo apt-get update</code></pre></li><li><p>Install packages to allow <code>apt</code> to use a repository over HTTPS:</p><pre><code>$ sudo apt-get install \    apt-transport-https \    ca-certificates \    curl \    gnupg-agent \    software-properties-common</code></pre></li><li><p>Add Docker’s official GPG key:</p><pre><code>$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</code></pre><p>Verify that you now have the key with the fingerprint <code>9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88</code>, by searching for the last 8 characters of the fingerprint.</p><pre><code>$ sudo apt-key fingerprint 0EBFCD88pub   rsa4096 2017-02-22 [SCEA]      9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88uid           [ unknown] Docker Release (CE deb) &lt;docker@docker.com&gt;sub   rsa4096 2017-02-22 [S]</code></pre></li><li><p>Use the following command to set up the <strong>stable</strong> repository. To add the <strong>nightly</strong> or <strong>test</strong> repository, add the word <code>nightly</code> or <code>test</code> (or both) after the word <code>stable</code> in the commands below. <a href="https://docs.docker.com/install/" target="_blank" rel="noopener">Learn about <strong>nightly</strong> and <strong>test</strong> channels</a>.</p><blockquote><p><strong>Note</strong>: The <code>lsb_release -cs</code> sub-command below returns the name of your Ubuntu distribution, such as <code>xenial</code>. Sometimes, in a distribution like Linux Mint, you might need to change <code>$(lsb_release -cs)</code> to your parent Ubuntu distribution. For example, if you are using <code>Linux Mint Tessa</code>, you could use <code>bionic</code>. Docker does not offer any guarantees on untested and unsupported Ubuntu distributions.</p></blockquote></li></ol><ul><li><ul><li>x86_64 / amd64</li><li>armhf</li><li>arm64</li><li>ppc64le (IBM Power)</li><li>s390x (IBM Z)</li></ul></li></ul><pre><code>   $ sudo add-apt-repository \      &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \      $(lsb_release -cs) \      stable&quot;</code></pre><h4 id="INSTALL-DOCKER-ENGINE-COMMUNITY"><a href="#INSTALL-DOCKER-ENGINE-COMMUNITY" class="headerlink" title="INSTALL DOCKER ENGINE - COMMUNITY"></a>INSTALL DOCKER ENGINE - COMMUNITY</h4><ol><li><p>Update the <code>apt</code> package index.</p><pre><code>$ sudo apt-get update</code></pre></li><li><p>Install the <em>latest version</em> of Docker Engine - Community and containerd, or go to the next step to install a specific version:</p><pre><code>$ sudo apt-get install docker-ce docker-ce-cli containerd.io</code></pre><blockquote><p><strong></strong> Got multiple Docker repositories?</p><p>If you have multiple Docker repositories enabled, installing or updating without specifying a version in the <code>apt-get install</code> or <code>apt-get update</code> command always installs the highest possible version, which may not be appropriate for your stability needs.</p></blockquote></li><li><p>To install a <em>specific version</em> of Docker Engine - Community, list the available versions in the repo, then select and install:</p><p>a. List the versions available in your repo:</p><pre><code>$ apt-cache madison docker-ce  docker-ce | 5:18.09.1~3-0~ubuntu-xenial | https://download.docker.com/linux/ubuntu  xenial/stable amd64 Packages  docker-ce | 5:18.09.0~3-0~ubuntu-xenial | https://download.docker.com/linux/ubuntu  xenial/stable amd64 Packages  docker-ce | 18.06.1~ce~3-0~ubuntu       | https://download.docker.com/linux/ubuntu  xenial/stable amd64 Packages  docker-ce | 18.06.0~ce~3-0~ubuntu       | https://download.docker.com/linux/ubuntu  xenial/stable amd64 Packages  ...</code></pre><p>b. Install a specific version using the version string from the second column, for example, <code>5:18.09.1~3-0~ubuntu-xenial</code>.</p><pre><code>$ sudo apt-get install docker-ce=&lt;VERSION_STRING&gt; docker-ce-cli=&lt;VERSION_STRING&gt; containerd.io</code></pre></li><li><p>Verify that Docker Engine - Community is installed correctly by running the <code>hello-world</code> image.</p><pre><code class="shell">$ sudo docker run hello-world</code></pre></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;@[TOC]&lt;/p&gt;
&lt;h3 id=&quot;Uninstall-old-versions&quot;&gt;&lt;a href=&quot;#Uninstall-old-versions&quot; class=&quot;headerlink&quot; title=&quot;Uninstall old versions&quot;&gt;&lt;/a&gt;Uninst
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://alexbrucelu.github.io/categories/Linux/"/>
    
      <category term="docker" scheme="https://alexbrucelu.github.io/categories/Linux/docker/"/>
    
    
      <category term="ubuntu" scheme="https://alexbrucelu.github.io/tags/ubuntu/"/>
    
      <category term="nvidia-docker" scheme="https://alexbrucelu.github.io/tags/nvidia-docker/"/>
    
  </entry>
  
</feed>
